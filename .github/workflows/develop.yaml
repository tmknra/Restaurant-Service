name: Stage

on:
  push:
    branches: [ dev ]
    workflow_dispatch:

env:
  CONTAINER_NAME: restaurant-service
  IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.RESTAURANT_SERVICE_IMAGE_NAME }}
  USER_SERVICE_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/user-service

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'
      - run: chmod +x ./Restaurant_Service/gradlew
      - run: ./Restaurant_Service/gradlew build --no-daemon
      - run: chmod +x ./UserService/gradlew
      - run: ./UserService/gradlew build --no-daemon

  shipping-restaurant-service:
    name: Prepare restaurant-service docker image
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./Restaurant_Service
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  shipping-user-service:
    name: Prepare user-service docker image
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./UserService
          push: true
          tags: ${{ env.USER_SERVICE_IMAGE_NAME }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    name: Staging deploy
    runs-on: ubuntu-latest
    needs: [shipping-restaurant-service, shipping-user-service]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: copy file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "./Restaurant_Service/docker-compose.yml"
          target: "application"
#      - name: copy file via ssh key
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          port: ${{ secrets.PORT }}
#          key: ${{ secrets.SSHKEY }}
#          source: "./UserService/docker-compose.yml"
#          target: "user-service"
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            cd application &&
            docker pull ${{ env.IMAGE_NAME }}:latest &&
            docker-compose up --build -d
#            &&
#            cd ../UserService &&
#            docker pull ${{ env.USER_SERVICE_IMAGE_NAME }}:latest &&
#            docker-compose up --build -d